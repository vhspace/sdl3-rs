name: Checks

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: "always"
  # Add this feature by default, to easily install SDL3
  CI_BUILD_FEATURES: "build-from-source"

on:
  push:
    branches: ["master"]
  pull_request:

jobs:
  clippy-version-features:
    name: Clippy - feature ${{ matrix.feature }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        feature:
          - ash
          - unsafe_textures
          - ttf
          - hidapi
          - raw-window-handle

    steps:
      - name: checkout sources
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v2
        with:
          key: stable-${{ matrix.feature }}

      - name: Fetch dependencies
        run: cargo +stable fetch --locked

      # TODO: deny all warnings
      - name: Clippy
        run: |
          cargo +stable \
            clippy \
            --verbose \
            --locked \
            --offline \
            --all-targets \
            --features "$CI_BUILD_FEATURES ${{ matrix.feature }}" \
            -- \
            -A warnings \
            -W clippy::not_unsafe_ptr_arg_deref

  build-version-features:
    name: Build - ${{ matrix.os }} - feature ${{ matrix.feature }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        feature:
          - ash
          - unsafe_textures
          - ttf
          - hidapi
          - raw-window-handle

    steps:
      - name: checkout sources
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Cache cargo output
        uses: Swatinem/rust-cache@v2
        with:
          key: stable-${{ matrix.os }}-${{ matrix.feature }}

      - name: Fetch dependencies
        run: cargo +stable fetch --locked

      - name: Build
        run: |
          cargo +stable \
            build \
            --verbose \
            --locked \
            --offline \
            --examples \
            --all-targets \
            --features "$CI_BUILD_FEATURES ${{ matrix.feature }}"

  fmt:
    name: Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check
